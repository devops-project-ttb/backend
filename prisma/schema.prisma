generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // Ou "mysql" ou "sqlite" selon ton choix
  url      = env("DATABASE_URL")
}

model User {
  user_id     String       @id @default(uuid())
  pseudo      String       @unique
  email       String       @unique
  password    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  collections Collection[]
  UserItem   UserItem[]
}

model Collection {
  collection_id   String   @id @default(uuid())
  user            User     @relation(fields: [user_id], references: [user_id])
  user_id         String
  createdAt       DateTime @default(now())
  type            Type     @relation(fields: [type_id], references: [type_id])
  type_id         String
  items           Item[]
  collection_name String
  updatedAt       DateTime @updatedAt
}

model Item {
  item_id       String      @id @default(uuid())
  type          Type        @relation(fields: [type_id], references: [type_id])
  type_id       String
  collection    Collection? @relation(fields: [collection_id], references: [collection_id])
  collection_id String
  item_name     String
  image         String?
  provenance    String?
  description   String?
  note          Int?
  aromes        String[]
  accords       String[]
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  UserItem      UserItem[]
}

model Type {
  type_id    String       @id @default(uuid())
  type_name  String
  Collection Collection[]
  Item       Item[]
}

model UserItem {
  user_id String
  item_id String
  is_favorite    Boolean @default(false)
  user    User   @relation(fields: [user_id], references: [user_id])
  item    Item   @relation(fields: [item_id], references: [item_id])
  updatedAt     DateTime @updatedAt
  createdAt     DateTime    @default(now())

  @@id([user_id, item_id])
}
